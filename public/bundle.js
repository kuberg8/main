/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("\n\nconst header = document.querySelector(\"header\");\nconst nav = document.querySelector(\"nav\");\nconst navSpan = nav.querySelector(\"span\");\nconst navLinks = nav.querySelectorAll(\"a\");\n\nlet isMobile = window.innerWidth < 778;\n\n/////// listeners\n\nwindow.addEventListener(\"resize\", ({ target }) => {\n  if (target.innerWidth < 778) isMobile = true;\n  else isMobile = false;\n});\n\n// window.addEventListener(\"error\", (err) => console.log(err));\n\n//////\n\nnavSpan.addEventListener(\"click\", () => {\n  if (\n    isMobile &&\n    pageYOffset >= nav.clientHeight + header.clientHeight &&\n    !nav.isOpen\n  ) {\n    nav.style.transform = `translateY(${nav.clientHeight}px)`;\n    nav.isOpen = true;\n  } else {\n    nav.style.transform = \"translateY(0px)\";\n    nav.isOpen = false;\n  }\n});\n\nnavLinks.forEach((link) => {\n  link.addEventListener(\"click\", () => scrollToBlock(link.innerHTML));\n});\n\nfunction scrollToBlock(block) {\n  navSpan.click();\n\n  document\n    .getElementById(block)\n    .scrollIntoView({ block: \"start\", behavior: \"smooth\" });\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n// Поиск совпадений\n\nconst inputRegular = document.querySelector(\"input\");\nconst text = document.getElementById(\"text\");\nconst oldText = text.textContent;\n\ninputRegular.addEventListener(\"blur\", clear);\ninputRegular.addEventListener(\"input\", ({ target }) => find(target));\n\nfunction find(elim) {\n  if (!elim.value) {\n    text.textContent = oldText;\n  } else {\n    let re = new RegExp(elim.value, \"g\");\n\n    text.innerHTML = oldText.includes(elim.value)\n      ? oldText.replace(re, `<b style=\"color:red;\">${elim.value}</b>`)\n      : text.innerHTML;\n  }\n\n  if (oldText.includes(elim.value)) {\n    elim.style.color = \"black\";\n  } else {\n    elim.style.color = \"red\";\n  }\n}\n\nfunction clear() {\n  text.textContent = oldText;\n  inputRegular.value = \"\";\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n// Калькулятор\n\nlet x;\nlet y;\nlet operation;\n\nconst textArea = document.getElementById(\"caption\");\nconst calculator1 = document.getElementById(\"calculator1\");\n\ncalculator1.addEventListener(\"click\", ({ target }) => {\n  if (target.hasAttribute(\"isNumber\")) {\n    textArea.value += target.value;\n  } else if (target.hasAttribute(\"isOperation\")) {\n    switch (target.value) {\n      case \"=\":\n        reslt();\n        break;\n      default:\n        y = null;\n        x = textArea.value;\n        operation = target.value;\n        textArea.value = \"\";\n    }\n  }\n});\n\nfunction reslt() {\n  const count = (a, b) => {\n    switch (operation) {\n      case \"+\":\n        textArea.value = Number(a) + Number(b);\n        break;\n      case \"-\":\n        textArea.value = Number(a) - Number(b);\n        break;\n      case \"*\":\n        textArea.value = Number(a) * Number(b);\n        break;\n      case \"/\":\n        textArea.value = Number(a) / Number(b);\n        break;\n      case \"%\":\n        textArea.value = Number(a) % Number(b);\n        break;\n    }\n  };\n\n  if (y === null) {\n    y = textArea.value;\n    count(x, textArea.value);\n  } else {\n    count(textArea.value, y);\n  }\n}\n\n//Калькулятор 2\nconst textArea2 = document.getElementById(\"caption2\");\n\ncalculator2.addEventListener(\"click\", ({ target }) => {\n  if (target.hasAttribute(\"isNumber\")) {\n    textArea2.value += target.value;\n  } else if (target.hasAttribute(\"isOperation\")) {\n    switch (target.value) {\n      case \"=\":\n        textArea2.value = eval(textArea2.value);\n        break;\n      case \"(\":\n        textArea2.value = textArea2.value + target.value;\n        break;\n      case \")\":\n        textArea2.value = textArea2.value + target.value;\n        break;\n      case \"AC\":\n        textArea2.value = \"\";\n        break;\n      case \"C\":\n        textArea2.value =\n          textArea2.value.slice(-1) === \" \"\n            ? textArea2.value.slice(0, -3)\n            : textArea2.value.slice(0, -1);\n        break;\n      default:\n        textArea2.value = textArea2.value + \" \" + target.value + \" \";\n    }\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//Время\n\nsetInterval(() => {\n  let time = new Intl.DateTimeFormat(\"ru-ru\", {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n    hour12: false,\n  }).format(new Date());\n\n  document.getElementById(\"date\").textContent = time;\n}, 1000);\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//Promise\n\nlet dang = (backgroundColor = \"black\", mr = 500) => {\n  return new Promise((resolve) => {\n    document.getElementById(\"promise_title\").style.transitionDuration =\n      mr + \"ms\";\n    document.getElementById(\"promise_title\").style.color = backgroundColor;\n\n    setTimeout(() => {\n      resolve(1);\n    }, mr);\n  });\n};\n\n/* Через Async Await*/\ndocument.getElementById(\"promise\").onclick = async () => {\n  document.getElementById(\"promise\").disabled = true;\n\n  await dang(\"pink\", 300);\n  await dang(\"blue\", 3000);\n  await dang(\"red\");\n  await dang(\"orange\", 1000);\n  await dang(\"violet\");\n  await dang(\"white\", 100);\n  await dang(\"black\", 100);\n  await dang(\"white\", 100);\n  await dang(\"black\");\n\n  document.getElementById(\"promise\").disabled = false;\n};\n\n//Цепочка промисов\n// document.getElementById(\"promise\").onclick = () => {\n//   document.getElementById(\"promise\").disabled = true;\n//   dang(\"pink\", 0).then(() =>\n//     dang(\"blue\")\n//       .then(() => dang(\"red\"))\n//       .then(() => dang(\"orange\"))\n//       .then(() => dang(\"yellow\"))\n//       .then(() => dang(\"pink\"))\n//       .then(() => dang(\"black\"))\n//       .finally(() => (document.getElementById(\"promise\").disabled = false))\n//   );\n// };\n\n// Запрос по API\nconst request = async (pokemon) => {\n  let res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon}`);\n\n  // or res.status === 404\n  if (res.ok === false) {\n    result.innerHTML = \"Not Correct\";\n  }\n\n  return res.json();\n};\n\nconst form = document.getElementById(\"form\");\nconst resultApi = document.getElementById(\"result_api\");\n\nform.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n\n  let pokemon = form.elements.pokemon.value;\n\n  if (pokemon != \"\") {\n    request(pokemon.toLowerCase()).then((response) => {\n      resultApi.innerHTML = `${response.name.toUpperCase()} <img src='${\n        response.sprites.front_default\n      }'>`;\n    });\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//Кординаты\n\nlet moveTeam = \"white\";\nlet isChosen = false;\n\nfunction chess(event) {\n  let cell = event.target;\n\n  function move() {\n    let figureChosen = document.getElementsByClassName(\"chosen\")[0];\n    let NameFigureChosen = figureChosen.getAttribute(\"figure\");\n\n    figureChosen.classList.remove(\"chosen\");\n\n    cell.innerHTML = figureChosen.outerHTML;\n    figureChosen.outerHTML = \"\";\n\n    moveTeam = moveTeam === \"white\" ? \"black\" : \"white\";\n    isChosen = false;\n  }\n\n  function eat() {\n    let figureChosen = document.getElementsByClassName(\"chosen\")[0];\n    let NameFigureChosen = figureChosen.getAttribute(\"figure\");\n\n    figureChosen.classList.remove(\"chosen\");\n\n    cell.outerHTML = figureChosen.outerHTML;\n    figureChosen.outerHTML = \"\";\n\n    moveTeam = moveTeam === \"white\" ? \"black\" : \"white\";\n    isChosen = false;\n  }\n\n  if (isChosen === false) {\n    if (\n      cell.hasAttribute(\"figure\") === true &&\n      cell.getAttribute(\"team\") === moveTeam\n    ) {\n      cell.classList.add(\"chosen\");\n      isChosen = true;\n    } else {\n      return;\n    }\n  } else if (isChosen === true) {\n    if (cell.hasAttribute(\"figure\") === false) {\n      move();\n    } else if (\n      cell.hasAttribute(\"figure\") === true &&\n      cell.getAttribute(\"team\") != moveTeam /*&& */\n    ) {\n      eat();\n    }\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//Рандом\n\nconst min = document.getElementById(\"min\");\nconst max = document.getElementById(\"max\");\nconst resultRandom = document.getElementById(\"result_random\");\nconst randomButton = document.getElementById(\"random_button\");\n\nrandomButton.addEventListener(\"click\", () => {\n  randomButton.disabled = true;\n\n  function timer() {\n    return new Promise((resolve) => {\n      let rand = min.value - 0.5 + Math.random() * (max.value - min.value + 1);\n\n      resultRandom.style.animationName = \"randomTwo\";\n\n      setTimeout(() => {\n        resultRandom.style.animationName = \"random\";\n        resultRandom.textContent = Math.round(rand);\n        resolve();\n      }, 200);\n    });\n  }\n\n  if (+min.value > +max.value) {\n    resultRandom.textContent = \"error\";\n    randomButton.disabled = false;\n  } else if (+min.value + 4 > +max.value) {\n    timer().then(() => (randomButton.disabled = false));\n  } else {\n    let tick = setInterval(timer, 400);\n\n    setTimeout(() => {\n      clearInterval(tick);\n      randomButton.disabled = false;\n    }, 1900);\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n// Саймон говорит\n\nlet box = document.getElementsByClassName(\"gameColor\"); // массив цветов\nlet amount = box.length; // кол-во итераций в игре\n\nfunction getMassRandom(arr = []) {\n  let gameButton = document.getElementById(\"gameButton\");\n  let game = document.getElementById(\"game\");\n\n  document.getElementById(\"game_result\").innerHTML = \"\";\n\n  game.onclick = null;\n  gameButton.disabled = true;\n\n  if (arr.length === amount) {\n    let sounds = document.getElementsByTagName(\"audio\");\n    let customizationTime = document.getElementById(\"customization\");\n    let time = +customizationTime.complexity.value;\n\n    let i = 0;\n    let j = 1;\n    let color;\n\n    setTimeout(function tick() {\n      if (i === amount) {\n        return null;\n      }\n\n      color = box[arr[i]].style.background;\n      box[arr[i]].style.background = \"green\";\n      box[arr[i]].number = box[arr[i]].number\n        ? [...box[arr[i]].number, j]\n        : [j];\n      sounds[arr[i]].play();\n\n      setTimeout(tick, time);\n    }, time);\n\n    setTimeout(function tick() {\n      if (i === amount) {\n        game.setAttribute(\"onclick\", \"game(event)\");\n        gameButton.disabled = false;\n        return null;\n      }\n\n      box[arr[i]].style.background = color;\n      sounds[arr[i]].pause();\n      i++;\n      j++;\n\n      setTimeout(tick, time);\n    }, time + time / 2);\n  } else {\n    let value = Math.round(0 - 0.5 + Math.random() * (3 - 0 + 1));\n    if (arr.some((item) => item === value) && amount < 5) {\n      getMassRandom(arr);\n    } else {\n      arr[0] && arr[arr.length - 1] === value ? null : arr.push(value);\n      getMassRandom(arr);\n    }\n  }\n}\n\nlet orderNumber = 1;\nlet RoundNumber = 1;\n\nfunction game(event) {\n  let sound = event.target.getElementsByTagName(\"audio\")[0];\n  let color = event.target.style.background;\n  let box = document.getElementsByClassName(\"gameColor\");\n\n  let Round = document.getElementById(\"Round\");\n\n  if (orderNumber === amount) {\n    console.log(event.target.number + \" - \" + orderNumber);\n\n    sound.play();\n    event.target.style.background = \"green\";\n    orderNumber = 1;\n\n    RoundNumber++;\n    amount++;\n    Round.innerHTML = \"Round: \" + RoundNumber;\n\n    for (var i = 0; i < box.length; i++) {\n      box[i].number = null;\n    }\n\n    getMassRandom();\n  } else if (\n    event.target.number &&\n    event.target.number.some((item) => item === orderNumber)\n  ) {\n    console.log(event.target.number + \" - \" + orderNumber);\n\n    sound.play();\n    event.target.style.background = \"green\";\n    orderNumber++;\n  } else {\n    console.log(event.target.number + \" != \" + orderNumber + \" ERROR\");\n    document.getElementById(\n      \"game_result\"\n    ).innerHTML = `Sorry, you lost on ${RoundNumber} round`;\n\n    sound.play();\n    event.target.style.background = \"red\";\n    orderNumber = 1;\n\n    RoundNumber = 1;\n    Round.innerHTML = \"Round: \" + RoundNumber;\n    amount = 4;\n\n    for (var i = 0; i < box.length; i++) {\n      box[i].number = null;\n    }\n  }\n\n  setTimeout(() => {\n    sound.pause();\n    event.target.style.background = color;\n  }, 250);\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//Отправка формы\n\nconst postData = async (url, data) => {\n  let res = await fetch(url, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n    method: \"POST\",\n    body: JSON.stringify(data), //data (если передаешь в формате FormData)\n  });\n\n  return res;\n};\n\nlet form2 = document.forms[1];\n\nform2.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n\n  /**/\n  let formData = {\n    login: form2.login.value,\n    password: form2.password.value,\n    textarea: form2.textarea.value,\n    select: form2.select.value,\n    checkbox: form2.checkbox.checked,\n    radio: form2.radio.value,\n    file: form2.file.files,\n    time: form2.time.value,\n    color: form2.color.value,\n    range: form2.range.value,\n  };\n\n  //let formData = new FormData(form2) - альтернатива варианта сверху\n\n  //Способ проверить все ключи и значения\n  /*\n\tfor (var pair of formData.entries()) {\n\t    console.log(pair[0]+ ': ' + pair[1]); \n\t}\n\t*/\n\n  postData(\"https://jsonplaceholder.typicode.com/\", formData)\n    .then((response) => {\n      alert(\"Отправлено\");\n      console.log(response);\n    })\n    .catch((response) => {\n      alert(\"ошибка\");\n      console.log(response);\n    });\n});\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//Cортировка массивов\n\n//найти задачу посложнее\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n/* Анаграмма\nlet f = prompt(\"введите слово\")\nlet s = prompt(\"введите слово\")\n\n\nfunction finder(word1, word2) {\n\tlet sameSymbolLenght = 0\n\n\tfor (var i = 0; i < word1.length; i++) {\n\t\tfor (var j = 0; j < word2.length; j++) {\n\t\t\tif(word1[i] === word2[j]) {\n\t\t\t\tsameSymbolLenght += 1\n\t\t\t}\n\t\t}\n\t}\n\n\tif (sameSymbolLenght === word1.length) {\n\t\tconsole.log(sameSymbolLenght)\n\t\talert(`same, same = ${sameSymbolLenght}`)\n\t} else {\n\t\tconsole.log(sameSymbolLenght)\n\t\talert(`not same, same = ${sameSymbolLenght}`)\n\t} \n}\n\nfinder(f, s)\n\n\n//второй способ \n\nfunction finder(word1, word2) {\n\n\tif(word1.length != word2.length) {\n\t\treturn false\n\t}\n\n\n\tif (word1.split('').sort().join('') === word2.split('').sort().join('')) {\n\t\treturn true\n\t} \n\n\treturn false\n}\n\nalert(finder(\"word1\", \"rd1wo\"))\n*/\n\n//Составление слова\n/*\nlet input = {\n\t\" \": [5],\n\td: [10],\n\te: [1],\n\tH: [0],\n\tl: [2, 3, 9],\n\to: [4, 7],\n\tr: [8],\n\tw: [6]\n}\n\n\nlet buildString = (m) => {\n\tlet result = []\n\n\tlet countSymbols = []\n\n\tfor(let key in m) {\n\t\tfor(let value of m[key]) {\n\t\t\tcountSymbols.push(value)\n\t\t}\n\t}\n\t\n\tcountSymbols = Math.max.apply(null, countSymbols)\n\n\n\n\tfor (var i = 0; i <= countSymbols; i++) {\n\t\tfor(let key in m) {\n\t\t\tfor (var j = 0; j < m[key].length; j++) {\n\t\t\t\tif (m[key][j] == i) {\n\t\t\t\t\tresult.push(key)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\talert(result.join(\"\"))\n}\n\nbuildString(input)\n\n\nвторой способ:\n\n\nlet buildString2 = (m) => {\n\tlet result = []\n\n\n\tfor(let key in m) {\n\t\tfor(let j of m[key]) {\n\t\t\tresult[j] = key\n\t\t}\n\t}\n\n\n\n\talert(result.join(\"\"))\n}\n\nbuildString2(input)\n*/\n\n/* Палиндром\nlet word = prompt('Введите слово')\n\nfunction isPalindrom(word) {\n\tword.toLowerCase()\n\n\tfor (var i = 0; i < word.length; i++) {\n\t\tfor (var j = word.length - 1; j <= 0; j--) {\n\t\t\tif (word[i] != word[j]) {\n\t\t\t\treturn alert(false)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn alert(true)\n}\n\nisPalindrom(word)\n*/\n\n/* FizzBuzz \nlet number = prompt('Введите число')\n\nfunction FizzBuzz(n) {\n\tfor (var i = 1; i <= n; i++) {\n\t\tif (i % 5 === 0 && i % 3 === 0) {\n\t\t\tconsole.log(\"FizzBuzz\")\n\t\t} else if (i % 5 === 0) {\n\t\t\tconsole.log(\"buzz\")\n\t\t} else if (i % 3 === 0) {\n\t\t\tconsole.log(\"fizz\")\n\t\t} else {\n\t\t\tconsole.log(i)\n\t\t}\n\t\t\n\t}\n}\n\nFizzBuzz(number)\n*/\n\n/* Сколько гласных в слове\nlet string = prompt('Введите слово')\n\nfunction findVowels(word) {\n\tlet Vowels = [\"e\",\"y\",\"u\",\"i\",\"o\",\"a\"]\n\tlet Vowelscount = 0\n\n\tword = word.split('')\n\n\tfor (var i = 0; i < word.length; i++) {\n\t\tfor (var j = 0; j < Vowels.length; j++) {\n\t\t\tif (Vowels[j] === word[i]) {\n\t\t\t\tVowelscount++\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\n\tconsole.log(\"Гласных в этом слове - \" + Vowelscount)\t\t\n}\n\nfindVowels(string)\n\n\n//второй метод \n\nlet string = prompt('Введите слово')\n\nfunction findVowels(word) {\n\tlet Vowels = [\"e\",\"y\",\"u\",\"i\",\"o\",\"a\"]\n\tlet Vowelscount = 0\n\n\tfor(let value of word.toLowerCase()) {\n\t\tif (Vowels.includes(value)) {  // выявляет, содержит ли массив определенное значение\n\t\t\tVowelscount++\n\t\t}\n\t}\n\n\tconsole.log(\"Гласных в этом слове - \" + Vowelscount)\t\t\n}\n\nfindVowels(string)\n*/\n\n//из массива в объект\n/*\nlet aR = [\n\t{name: \"height\", value: 10},\n\t{name: \"width\", value: 20}\n]\n\nfunction obj() {\n\tlet ob = {}\n\n\taR.forEach( (item) => {\n\t\tob[item.name] = item.value\n\t})\n\n\tconsole.log(ob)\n}\n\nobj() \n*/\n\n/* Каррирование\nfunction add_v1(a, b) {\n    let sum = a;\n\n    let makeSum = function (b) {\n        if (b) {\n            sum += b;\n            return makeSum;\n        } else {\n            return sum;\n        }\n    }\n\n    return makeSum;\n}\n\nconsole.log(add_v1(2)(5)());\n*/\n\n//Уникальные значения в массиве\n/*\nlet massive = [1,1,2,2,3,3,4,4,5,5]\n\nfunction unique(arr) {\n\tlet res = []\n\n\tarr.forEach( (item) => {\n\t\tif (res.indexOf(item) === -1) {\n\t\t\tres.push(item)\n\t\t}\n\t})\n\n\treturn res\n}\n\nconsole.log(unique(massive))\n*/\n\n//Расплющивание массива + Рекурсия\n/*\nlet massive = [1,[2,[3,[4]]]]\n\nfunction flat(arr) {\n\tlet res = []\n\n\tarr.forEach( (item) => {\n\t\tif (Array.isArray(item)) {\n\t\t\tres = res.concat(flat(item))\n\t\t} else {\n\t\t\tres.push(item)\n\t\t}\n\t})\n\n\treturn res\n}\n\nconsole.log(flat(massive))\n\n\n// Деструктурирующее присваивание очень полезно знать (особенно для react)\nlet res = [0]\nlet res2 = [2,3]\nlet res3 = [4,5]\n\nconsole.log([...res, ...res2, ...res3])\n\n\n//Второй метод через встроенный метод массива Array.prototype.flat()\n\nconsole.log(massive.flat(Infinity))\n*/\n\n\n//# sourceURL=webpack://main/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;